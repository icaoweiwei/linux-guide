目录与路径
=========

相对路径与绝对路径
----------------

绝对路径
    路径的写法 **一定由根目录 / 写起** ，例如： ``/usr/share/doc`` 这个目录。
相对路径
    路径的写法 **不是由 / 写起** ，例如由 ``/usr/share/doc`` 要到 ``/usr/share/man`` 底下时，可以写成： ``cd ../man`` 这就是相对路径的写法！相对路径意指 **相对于当前工作目录的路径** ！


目录的相关操作
-------------

特殊的目录
``````````
============   =============
``.``          代表此层目录
``..``         代表上一层目录
``-``          代表前一个工作目录
``~``          代表当前使用者所在的家目录
``~account``   代表 account 这个使用者的家目录(account是个帐号名称)
============   =============

``cd`` 变换目录
`````````````````
cd是Change Directory的缩写，这是用来变换工作目录的命令。\
注意，目录名称与cd命令之间存在一个空格。

``pwd`` 显示目前所在的目录
````````````````````````````
pwd是Print Working Directory的缩写，也就是显示当前所在目录的命令。

::

  [root@www ~]# pwd [-P]
  
选项与参数：

-P    显示出确实的路径，而非使用连结 (link) 路径。

``mkdir`` 创建新目录
```````````````````````
::
  
  [root@www ~]# mkdir [-mp] 目录名称

选项与参数：

-m    配置文件的权限喔！直接配置，不需要看默认权限 (umask) 的脸色～
-p    帮助你直接将所需要的目录(包含上一级目录)递回创建起来！
      如果该目录本来就已经存在时，系统也不会显示错误信息。

在默认的情况下， 你所需要的目录得一层一层的创建才行。

``rmdir`` 删除空目录
````````````````````
::

  [root@www ~]# rmdir [-p] 目录名称

选项与参数：

-p    连同上一级的 **空目录** 也一起删除


``PATH`` 环境变量
`````````````````

- 不同身份使用者默认的 ``PATH`` 不同，默认能够随意运行的命令也不同；
- ``PATH`` 是可以修改的，所以一般使用者还是可以透过修改 ``PATH`` 来运行某些位于 ``/sbin`` 或 ``/usr/sbin`` 下的命令来查询；
- 使用绝对路径或相对路径直接指定某个命令的档名来运行，会比搜寻 ``PATH`` 来的正确；
- 命令应该要放置到正确的目录下，运行才会比较方便；
- 本目录( ``.`` )最好不要放到 ``PATH`` 当中。
